@page "/list/{id:int}"

@inject IModalService modal

<div class="content">
    <div class="container" id="content-retreat">
        <div class="content-header pt-5">
            <h2 class="content-text">My TestList @Id</h2>
            <a href="/">
                <img class="content-logo" src="img/logo.png" />
            </a>
        </div>

        @if (!list.Any())
        {
            <div class="content-body">
                <div class="content-img pt-5" id="wide-image-format">
                    <div class="content-img__item">
                        <img src="img/girl fix.svg" />
                    </div>
                    <div class="content-img__item">
                        <img src="img/h1.svg" />
                    </div>
                    <div class="content-img__item">
                        <img src="img/h2.svg" />
                    </div>
                </div>

                <div class="content-img" id="compressed-image-format">
                    <img src="img/adaptiveHuman.svg" />
                </div>

                <div class="content-subtext pt-5">
                    <h3 class="text-color__grey">List have not tasks</h3>
                    <span>added task, plese</span>
                </div>
            </div>
        }
        else
        {
            <div class="content-todo">
                @foreach (var item in list)
                {

                    <a href="/">@item</a>

                }
            </div>
        }
    </div>
</div>

<div class="content-button mt-2">
    <div class="block-retreat">
        <div class="button-block">
            <button class="btn btn-radius" @onclick="AddToDo">
                <span class="material-icons">
                    add
                </span>
                <span class="text-famaly__roboto mr-1">Add a new task</span>
            </button>
            <div class="line"></div>
        </div>
    </div>
    <div class="burger menu-block pt-4">
        <button class="btn" @onclick="modal.Click">
            <span class="material-icons">
                linear_scale
            </span>
        </button>

        <HamButton Visible="!modal.IsOpen" IsActive="modal.IsOpen" Click="modal.Click" />
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private List<string> list = new List<string>();

    protected override void OnInitialized()
    {
        /// Обновление кнопки HamButton после закрытия Modal
        modal.Update += () => StateHasChanged();
    }

    private void AddToDo()
    {
        list.Add("Test message");
    }
}
