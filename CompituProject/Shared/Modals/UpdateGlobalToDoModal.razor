
<div class="add-todo-content" @onkeyup="lazyKey">
    <div class="add-todo">
        <input type="text" required @bind="upToDo.Title" />
        <label>New task name</label>
        <span></span>
    </div>
    <br />
    <div class="add-todo">
            <input type="text" required @bind="upToDo.SubTitle" />
            <label>New additional Information</label>
            <span></span>
     </div>

    <div class="add-container">
        <input type="datetime-local" class="datepick" @onchange="EndDate_change" value="@Convert.ToDateTime(upToDo.DateTime).ToString("yyyy-MM-ddThh:mm")"/>
        <button class="btn add-todo-button" @onclick="AddToDo">
            Update
        </button>
    </div>
</div>

@code{

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter]
    public EventCallback CallbackUpdateToDo { get; set; }

    [Parameter]
    public GlobalToDo upToDo { get; set; }

    public async Task lazyKey(KeyboardEventArgs keyboard)
    {
        if (keyboard.Key == "Enter")
            await AddToDo();
    }

    public async Task AddToDo()
    {
        if (CallbackUpdateToDo.HasDelegate)
            await CallbackUpdateToDo.InvokeAsync(upToDo);

        StateHasChanged();
        await BlazoredModal.Close();
    }

    protected void EndDate_change(ChangeEventArgs endDateEvent)
    {
        DateTime.TryParse(endDateEvent.Value.ToString(), out DateTime tempTime);

        upToDo.DateTime = tempTime;

        StateHasChanged();
    }
}