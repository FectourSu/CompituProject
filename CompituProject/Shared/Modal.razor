
@inject IJSRuntime jsDel
@inject Blazored.Modal.Services.IModalService modals
@inject NavigationManager navigate

<div class="filter @(modal.IsOpen.Value ? "dark" : string.Empty)" @onclick="modal.Click">
</div>

<div class="modal custom @cssClassShow" id="trackModal" tabindex="-1"
     role="dialog" aria-labelledby="trackModalLabel" aria-hidden="true">
    <div class="modal-dialog @(modal.IsOpen.Value ? "modal-enable" : string.Empty)">
        <div class="modal-content">

            <div class="modal-header">
                <div class="added-list">
                    <i class="fa fa-plus" @onclick="@(() => { modals.Show<AddListModal>("Add list"); modal.Click(); })"></i>
                    <h3 class="getlaid" id="trackModalLabel">Select list</h3>
                </div>
            </div>

            <div class="modal-body">

                @foreach (var list in ToDoLists)
                {
                    <div class="list" style="margin: 10px 0">
                        <a href="list/@list.Id" @onclick="modal.Click"><p>@list.Name</p></a>
                        <i class="fa fa-trash" @onclick="async () => await DeleteList(list.Id)"></i>
                    </div>
                }

            </div>

            <div class="modal-footer">
                <div class="btnmodal" data-dismiss="modal">
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    public async Task DeleteList(int id)
    {
        service.Delete(id);

        ToDoLists.Remove(ToDoLists.Find(i => i.Id == id));

        await jsDel.WriteLocalStorage(service.Get());

        if (navigate.Uri.Split("/").LastOrDefault() == id.ToString())
            navigate.NavigateTo("/CompituProject/");

    }
}